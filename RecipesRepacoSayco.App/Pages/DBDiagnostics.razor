@page "/db-diagnostic"
@using RecipesRepacoSayco.Data.Interfaces
@inject IDialogService DialogService
@using RecipesRepacoSayco.App.Shared.Components.Dialog;

@inject IDatabaseDiagnostics DbDiag

<MudPaper Class="pa-4 m-4">
    <MudText Typo="Typo.h6">Database Diagnostics</MudText>
    <MudDivider Class="my-2" />

    <MudText Typo="Typo.subtitle2">Last @Logs.Count entries (last 24 hours)</MudText>

    <MudTable Items="Logs" Dense="true" Hover="true">
        <HeaderContent>
            <MudTh>Timestamp</MudTh>
            <MudTh>Source</MudTh>
            <MudTh>Command</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Message</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Timestamp.ToLocalTime().ToString("HH:mm:ss")</MudTd>
            <MudTd>@context.Source</MudTd>
            <MudTd>@context.Command</MudTd>
            <MudTd>
                <MudButton Variant="Variant.Outlined" Size="Size.Small"
                    OnClick="@(() => ShowDialogAsync("Command", context.Command))">
                    View
                </MudButton>
            </MudTd>

            <MudTd>
                <MudButton Variant="Variant.Outlined" Size="Size.Small"
                    OnClick="@(() => ShowDialogAsync("Message", context.Message))">
                    View
                </MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private List<DatabaseLogEntry> Logs = new();

    protected override void OnInitialized()
    {
        Logs = DbDiag.GetRecentLogs();
    }


    private async Task ShowDialogAsync(string title, string content)
    {
        var parameters = new DialogParameters
{
{ "Title", title },
{ "Content", content }
};

        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium, FullWidth = true };

        await DialogService.ShowAsync<DialogView>("Detail", parameters, options);
    }
}
